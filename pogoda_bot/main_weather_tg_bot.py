import requests
import datetime

import markups as nav
import messages as msg

from config import tg_bot_token, open_weather_token
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor


""" –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω """

bot = Bot(token=tg_bot_token)
dp = Dispatcher(bot)


@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await message.reply(f"–ü—Ä–∏–≤–µ—Ç,{message.from_user.first_name}! –ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —è –ø—Ä–∏—à–ª—é —Å–≤–æ–¥–∫—É –ø–æ–≥–æ–¥—ã!")

@dp.message_handler()
async def get_message(message: types.Message):

    code_to_smile = {
        "Clear": "–Ø—Å–Ω–æ \U00002600",
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
        "Rain": "–î–æ–∂–¥—å \U00002614",
        "Drizzle": "–î–æ–∂–¥—å \U00002614",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
        "Snow": "–°–Ω–µ–≥ \U0001F328",
        "Mist": "–¢—É–º–∞–Ω \U0001F32B"
    }

    try:
        r = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric"
        )
        """–î–æ–±–∞–≤–ª—è–µ—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é data –æ—Ç–≤–µ—Ç –≤ json"""
        data = r.json()

        """–ë–µ—Ä—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π data.—Å –∫–ª—é—á–æ–º –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫ –∫–ª—é—á—É"""
        city = data["name"]
        cur_weather = data["main"]["temp"]
        temp_feels = data["main"]["feels_like"]

        weather_description = data["weather"][0]["main"]
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, –Ω–µ –ø–æ–π–º—É —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞"

        coord_lon = data["coord"]["lon"]
        coord_lat = data["coord"]["lat"]
        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"] * 0.75
        wind = data["wind"]["speed"]
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        length_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(
            data["sys"]["sunrise"])


        await message.reply(f"üï∞{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')} üï∞\n"
              f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–î–æ–ª–≥–æ—Ç–∞: {coord_lon}\n–®–∏—Ä–æ—Ç–∞: {coord_lat}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}¬∞ {wd}\n"
              f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {temp_feels}¬∞\n"
              f"–í–ª–∞–∂–Ω–æ—Å—Ç—å:"f"{humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
              f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞:{sunrise_timestamp}\n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
              f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è:{length_of_the_day}\n"  
              f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è,{message.from_user.first_name }! \U0001F609"
              )
        await message.answer("–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É", reply_markup=nav.mainMenu)


    except:
        if message.text == '–û –±–æ—Ç–µ':
            await bot.send_message(message.from_user.id, f"–ö–∞–∫–æ–π –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π, –Ω—É –¥–µ—Ä–∂–∏!\n" + msg.text, reply_markup=nav.mainMenu)

        elif message.text == '–ü–æ–º–æ–≥–∏—Ç–µ!':
            await bot.send_message(message.from_user.id, msg.help_text, reply_markup=nav.mainMenu)

        elif message.text == '–ø—Ä–æ–±–ª–µ–º–∞ —Å –±–æ—Ç–æ–º':
            await bot.send_message(message.from_user.id, msg.help_text2, reply_markup=nav.mainMenu)

        elif message.text == '–ú–µ–Ω—é':
            await bot.send_message(message.from_user.id, msg.main_menu, reply_markup=nav.mainMenu)

        elif message.text == '–ö—Ä—É—Ç–æ–π –±–æ—Ç':
            await message.reply(f'–°–ø–∞—Å–∏–±–æ‚ù§Ô∏è')

        elif message.text == '–ß—Ç–æ —É–º–µ–µ—à—å –¥–µ–ª–∞—Ç—å?':
            await message.reply(f'{msg.what_you_do}',reply_markup=nav.mainMenu)

        else:
            await message.reply(f"{msg.wrong_message}\n"
            f"\U00002620 –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ \U00002620")
        print('–°—Ä–∞–±–æ—Ç–∞–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ')

if __name__ == '__main__':
    executor.start_polling(dp)
